/*
 * This file is generated by jOOQ.
 */
package co.globers.ibo.jooq.tables;


import co.globers.ibo.jooq.IboBack;
import co.globers.ibo.jooq.Keys;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityToGuess extends TableImpl<Record> {

    private static final long serialVersionUID = 450057169;

    /**
     * The reference instance of <code>ibo_back.entity_to_guess</code>
     */
    public static final EntityToGuess ENTITY_TO_GUESS = new EntityToGuess();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>ibo_back.entity_to_guess.id</code>.
     */
    public final TableField<Record, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('ibo_back.entity_to_guess_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>ibo_back.entity_to_guess.uri</code>.
     */
    public final TableField<Record, String> URI = createField(DSL.name("uri"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>ibo_back.entity_to_guess.name</code>.
     */
    public final TableField<Record, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>ibo_back.entity_to_guess.creation_datetime</code>.
     */
    public final TableField<Record, Timestamp> CREATION_DATETIME = createField(DSL.name("creation_datetime"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>ibo_back.entity_to_guess</code> table reference
     */
    public EntityToGuess() {
        this(DSL.name("entity_to_guess"), null);
    }

    /**
     * Create an aliased <code>ibo_back.entity_to_guess</code> table reference
     */
    public EntityToGuess(String alias) {
        this(DSL.name(alias), ENTITY_TO_GUESS);
    }

    /**
     * Create an aliased <code>ibo_back.entity_to_guess</code> table reference
     */
    public EntityToGuess(Name alias) {
        this(alias, ENTITY_TO_GUESS);
    }

    private EntityToGuess(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private EntityToGuess(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> EntityToGuess(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, ENTITY_TO_GUESS);
    }

    @Override
    public Schema getSchema() {
        return IboBack.IBO_BACK;
    }

    @Override
    public Identity<Record, Integer> getIdentity() {
        return Keys.IDENTITY_ENTITY_TO_GUESS;
    }

    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.ENTITY_TO_GUESS_PKEY;
    }

    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.ENTITY_TO_GUESS_PKEY, Keys.ENTITY_TO_GUESS_URI_KEY);
    }

    @Override
    public EntityToGuess as(String alias) {
        return new EntityToGuess(DSL.name(alias), this);
    }

    @Override
    public EntityToGuess as(Name alias) {
        return new EntityToGuess(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityToGuess rename(String name) {
        return new EntityToGuess(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityToGuess rename(Name name) {
        return new EntityToGuess(name, null);
    }
}
